// ScriptRunner->Merge Checks->Create Merge Check-> Custom merge checks

// ===== Script =====
// import
import com.atlassian.sal.api.component.ComponentLocator
import com.atlassian.bitbucket.user.UserService
import com.atlassian.bitbucket.user.SecurityService
import com.atlassian.bitbucket.hook.repository.RepositoryHookResult
import com.atlassian.bitbucket.auth.AuthenticationContext

// services
def userService = ComponentLocator.getComponent(UserService)
def securityService = ComponentLocator.getComponent(SecurityService)
def authContext = ComponentLocator.getComponent(AuthenticationContext)

// branches
def sourceBranch = mergeRequest.pullRequest.fromRef.displayId?.toUpperCase()
def targetBranch = mergeRequest.pullRequest.toRef.displayId?.toUpperCase()

// currentUser
def currentUser = authContext.getCurrentUser()
if (currentUser == null) {
    return RepositoryHookResult.rejected("拒絕合併", "無法識別目前使用者")
}

// 規則：僅允許從UAT分支發出PR到PROD分支。
if (targetBranch == "PROD" && sourceBranch != "UAT") {
    return RepositoryHookResult.rejected("拒絕合併", "僅允許從UAT分支發出PR到PROD分支。")
}

// 規則：僅允許資管人員進行PR合併。
if (currentUser.name != "SM001" ) {
    return RepositoryHookResult.rejected("拒絕合併", "僅允許資管人員進行PR合併。")
}

// 通過合併檢查
return RepositoryHookResult.accepted()