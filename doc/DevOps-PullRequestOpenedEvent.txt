// ScriptRunner->Listeners->Create Listener-> Custom listener

// ===== Event =====
//   PullRequestOpenedEvent

// ===== Script =====
// import
import com.atlassian.sal.api.component.ComponentLocator
import com.atlassian.bitbucket.event.pull.PullRequestOpenedEvent
import com.atlassian.bitbucket.pull.PullRequestService
import com.atlassian.bitbucket.user.UserService
import com.atlassian.bitbucket.user.ApplicationUser
import com.atlassian.bitbucket.util.PageRequestImpl
import com.atlassian.bitbucket.pull.PullRequestParticipantStatus

def groupName = "dev-user"
def pullRequest = (event as PullRequestOpenedEvent).pullRequest
def pullRequestService = ComponentLocator.getComponent(PullRequestService)
def userService = ComponentLocator.getComponent(UserService)
Iterable<ApplicationUser> users = userService.findUsersByGroup(groupName, new PageRequestImpl(0, 100)).values

pullRequest.reviewers.each { reviewer ->    
    if(reviewer.status != PullRequestParticipantStatus.APPROVED)
    {
        pullRequestService.removeReviewer(
            pullRequest.toRef.repository.id, 
            pullRequest.id,
            reviewer.user.name
        )
    }    
}

users.each { ApplicationUser user ->
    if (user.active && user.name != pullRequest.author.user.name) {
        pullRequestService.addReviewer(
            pullRequest.toRef.repository.id, 
            pullRequest.id,
            user.name
        )
    }
}